# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter Deployment

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build APK and Create Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > upload-keystore.jks.asc
          echo "${{ secrets.RELEASE_PROP }}" > key.properties.asc
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" --batch upload-keystore.jks.asc > android/app/upload-keystore.jks
          gpg -d --passphrase "${{ secrets.RELEASE_PROP_PASSWORD }}" --batch key.properties.asc > android/key.properties
      - name: Update Version in YAML
        run: sed -i "s/version:.*/version:\ ${GITHUB_REF_NAME#v}+${{ github.run_number }}/g" pubspec.yaml
      - name: Update Keystore Password in Gradle Properties
        run: sed -i 's/#{STORE_PASSWORD}#/${{ secrets.STORE_PASSWORD }}/g' android/key.properties
      - name: Update Keystore Key Password in Gradle Properties
        run: sed -i 's/#{KEY_PASSWORD}#/${{ secrets.KEY_PASSWORD }}/g' android/key.properties

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"
          channel: "stable"
          cache: true

      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 21"
          cache: "gradle"

      - run: echo $ENV_G_DART | base64 -di > lib/env/env.g.dart
        env:
          ENV_G_DART: ${{ secrets.ENV_G_DART }}

      - run: flutter clean
      - run: flutter pub get
      - run: flutter build appbundle --release --obfuscate --split-debug-info=symbols
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.TOKEN_GITHUB }}
          commit: ${{ github.sha }}
          generateReleaseNotes: true
      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab
  release:
    name: Release App to Production Track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Get Appbundle from Artifacts
        uses: actions/download-artifact@v5
        with:
          name: appbundle
      - name: Release App to Internal Test Track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.jenslemke.tech_knowl_edge_connect
          releaseFiles: app-release.aab
          track: internal
          # changesNotSentForReview: true
